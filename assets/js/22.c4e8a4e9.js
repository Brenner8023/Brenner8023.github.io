(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{174:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xss","aria-hidden":"true"}},[t._v("#")]),t._v(" XSS")]),t._v(" "),s("p",[s("a",{attrs:{name:"cTkgL"}})]),t._v(" "),s("h1",{attrs:{id:"分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分类","aria-hidden":"true"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),s("p",[t._v("XSS全称为Cross Site Scripting. 中文名为跨站脚本攻击. 该漏洞发生在用户端, 是指在渲染过程中发生了不在预期过程中的javascript代码执行.")]),t._v(" "),s("p",[t._v("反射型xss")]),t._v(" "),s("p",[t._v("存储型xss\n"),s("a",{attrs:{name:"617mk"}})]),t._v(" "),s("h1",{attrs:{id:"同源策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同源策略","aria-hidden":"true"}},[t._v("#")]),t._v(" 同源策略")]),t._v(" "),s("p",[t._v("同源策略限制了不同源之间进行资源交互, 是用于隔离潜在恶意文件的安全机制. 如果两个url的协议, 端口, 域名皆相同, 则认为它们同源.")])])}],!1,null,null,null);a.default=e.exports}}]);